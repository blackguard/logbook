/* all other stylesheets have been incorporated into this one (except editor-cell-element) */

/*
  ELEMENT:
  bd -- body
  hd -- header
  tl -- tool-bar
  cl -- eval-cell/editor-cell
  ts -- toggle-switch
  ou -- output element
  mu -- menu
  mi -- menuitem
  dg -- dialog
  ic -- indicator
  tp -- tool-bar type selector
  st -- settings dialog

  STYLE FEATURE:
  bg -- background
  fg -- foreground
  br -- border
  hl -- highlight

  STYLE FEATURE ATTRIBUTE:
  c -- color
  w -- width
  s -- style
  r -- radius

  METRIC FEATURE:
  w -- width
  h -- height
  m -- margin
  p -- padding
  g -- gap

  OTHER FEATURE:
  ff -- font-family
  lh -- line-height
  sh -- shadow

  ---

  {ELEMENT}-{STYLE FEATURE}{STYLE FEATURE ATTRIBUTE}
  {ELEMENT}-{METRIC FEATURE}
  {ELEMENT}-{OTHER FEATURE}
*/

:root {
    /* metrics */

    --height-header:        1.5rem;

    --padding-tool:         0 0.5em;
    --gap-tool:             0.5em;

    --padding-cell:         0 0.5em;
    --line-height-cell:     140%;
    --font-family-cell:     monospace;

    --padding-output:       0.5em;
    --padding-intercell:    1em;

    --width-toggle-switch:  1.5rem;
    --height-toggle-switch: 1.5rem;


    /* border */

    --border-radius-header:    0.125em;
    --border-width-header:     1px;
    --border-style-header:     solid;
    --border-color-header:     #ccc;

    --border-radius-tool:      0;
    --border-width-tool:       1px;
    --border-style-tool:       solid;
    --border-color-tool:       #ccc;
    --border-color-tool-focus: black;

    --border-radius-cell:      0.125em;
    --border-width-cell:       1px;
    --border-style-cell:       solid;
    --border-color-cell:       #ccc;
    --border-color-cell-focus: black;


    /* color */

    --bgcolor-body:                                       #eee;
    --bgcolor-header:                                     #f8f8f8;
    --bgcolor-tool:                                       hsl(  0deg   0%  98% / 100%);
    --bgcolor-cell:                                       hsl(  0deg   0%  99% / 100%);
    --bgcolor-output:                                     white;

    --color-type-markdown:                                hsl(205deg 100%  94% / 100%);
    --color-type-tex:                                     hsl( 45deg  81%  87% / 100%);
    --color-type-javascript:                              hsl( 85deg 100%  85% / 100%);

    --color-tool-toggle-fill-editable:                    transparent;
    --color-tool-toggle-stroke-editable:                  hsl(  0deg   9%  82% / 100%);
    --color-tool-toggle-fill-editable-checked:            hsl(  0deg 100%  50% / 100%);
    --color-tool-toggle-stroke-editable-checked:          hsl( 53deg 100%  50% / 100%);

    --color-tool-toggle-fill-visible:                     transparent;
    --color-tool-toggle-stroke-visible:                   hsl(  0deg   9%  82% / 100%);
    --color-tool-toggle-fill-visible-checked:             hsl(205deg 100%  83% / 100%);
    --color-tool-toggle-stroke-visible-checked:           hsl(  0deg 100%  45% / 100%);

    --color-tool-toggle-fill-autoeval:                    transparent;
    --color-tool-toggle-stroke-autoeval:                  hsl(  0deg   9%  82% / 100%);
    --color-tool-toggle-fill-autoeval-checked:            transparent;
    --color-tool-toggle-stroke-autoeval-checked:          hsl(  0deg  60%  70% / 100%);

    --border-color-tool-indicator:                        hsl(  0deg   9%  82% / 100%);
    --color-tool-indicator:                               hsl(  0deg   0%  97% / 100%);

    --border-color-tool-indicator-running:                black;
    --color-tool-indicator-running:                       hsl(120deg  94%  40% / 100%);

    --border-color-tool-indicator-modified:               black;
    --color-tool-indicator-modified:                      hsl(  0deg  60%  85% / 100%);

    --color-tool-type-select:                             hsl(  0deg   0%  97% / 100%);

    --bgcolor-menu:                                       #f0f0f0;
    --color-menu-border:                                  grey;
    --color-menu-border-shadow:                           lightgrey;
    --color-menuitem-text:                                black;
    --color-menuitem-text-disabled:                       #bbb;
    --bgcolor-menuitem-selected:                          #0004;
    --color-menuitem-separator:                           #3334;

    --color-dialog-shadow:                                grey;

    --bgcolor-settings:                                   hsl(  0deg   0%  98% / 100%);
    --color-border-settings-data-section:                 hsl(  0deg   0%   0% / 100%);
    --bgcolor-settings-data-section:                      hsl(  0deg   0%  95% / 100%);
    --color-settings-data-section:                        hsl(  0deg   0%   0% / 100%);
    --color-border-settings-data-section-heading:         #aaa;
    --bgcolor-settings-data-section-heading:              hsl(  0deg   0%  98% / 100%);
    --color-settings-data-section-heading:                hsl(  0deg   0%   0% / 100%);

    --color-settings-data-section-data-setting-control:   hsl(  0deg   0%   0% / 100%);
    --bgcolor-settings-data-section-data-setting-control: hsl(  0deg   0%  96% / 100%);

    --color-border-settings-warning:                      hsl(  0deg   0%   0% / 100%);
    --color-settings-warning:                             hsl(  0deg   0%   0% / 100%);
    --bgcolor-settings-warning:                           hsl( 60deg  80%  50% / 100%);

    --color-border-settings-error:                        hsl(  0deg   0%   0% / 100%);
    --color-settings-error:                               hsl(  0deg   0% 100% / 100%);
    --bgcolor-settings-error:                             hsl(  0deg  60%  50% / 100%);


    /* active output element highlight */

    --active-output-highlight-width: 2px;
    --active-output-highlight-color: black;
    --active-output-highlight-style: dashed;


    /* focus transition */

    --focus-x1-delay:    0s;
    --focus-x1-duration: 0.2s;
    --focus-x1-easing:   cubic-bezier(0.42, 0.0, 0.0, 1.0);

    --focus-x2-delay:    calc(var(--focus-x1-duration) / 4);
    --focus-x2-duration: 0.1s;
    --focus-x2-easing:   cubic-bezier(0.42, 0.0, 0.0, 1.0);
}


body {
    overflow: hidden;  /* inhibit scrolling for body */
    margin: 0 0 0 1px;  /* prevent left border from getting absorbed into browser window frame */
    background-color: var(--bgcolor-body);
}

main {
    /* enable scrolling for main element */
    overflow: auto;
    max-height: calc(100vh - var(--height-header));
    max-width:  100vw;
}

header {
    display: flex;
    align-items: flex-end;
    justify-content: flex-start;

    height: var(--height-header);
    background-color: var(--bgcolor-header);
    border-bottom: var(--border-width-header) var(--border-style-header) var(--border-color-header);
}

header > tool-bar {  /* next to menu */
    align-self: center;
    margin-left: auto;  /* push to far right */

    visibility: visible;
    max-height: 100vh;
    padding: 0 0.5em;
    border: 0;
    background-color: transparent;
}

.eval-cell-output {
    display: block;
    white-space: pre-wrap;  /* display white-space properly */
    line-height: 140%;

    padding: var(--padding-output);
    background-color: var(--bgcolor-output);

    /* no highlight */
    border-width: 0 0 0 var(--active-output-highlight-width);
    border-color: transparent;
    border-style: var(--active-output-highlight-style);
}
.eval-cell-output:has(+ tool-bar),
.eval-cell-output:has(+ eval-cell) {
    padding-bottom: var(--padding-intercell);
}


/* output element active highlight */
eval-cell[data-active] + .eval-cell-output {
    border-width: 0 0 0 var(--active-output-highlight-width);
    border-color: transparent transparent transparent var(--active-output-highlight-color);
    border-style: var(--active-output-highlight-style);
}


/* === visible/active - animated attributes === */

/* bare tool-bar and eval-cell base definitions: they define a collapsed state */

tool-bar {
    overflow: hidden;

    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: var(--gap-tool);

    background-color: var(--bgcolor-tool);

    /* prevent tabbing to contained controls by setting visibility:hidden */
    /* this is necessary because we don't set display:none because we want to animate the transition */
    visibility: hidden;

    max-height:   0;
    padding:      var(--padding-tool);
    border-width: 0;
    /* split border-color into the three specific sides; the bottom side is controlled separately by the input type selector */
    border-top-color:   var(--border-color-tool);
    border-right-color: var(--border-color-tool);
    border-left-color:  var(--border-color-tool);

    transition: max-height   var(--focus-x1-duration) var(--focus-x1-easing) var(--focus-x1-delay);
    transition: padding      var(--focus-x2-duration) var(--focus-x2-easing) var(--focus-x2-delay);
    transition: border-width var(--focus-x2-duration) var(--focus-x2-easing) var(--focus-x2-delay);
    transition: border-color var(--focus-x2-duration) var(--focus-x2-easing) var(--focus-x2-delay);

    border-radius: var(--border-radius-cell) var(--border-radius-cell) 0 0;
    border-style:  var(--border-style-tool);

}

eval-cell {
    overflow: hidden;

    display: block;
    margin:  0;

    outline: 0px solid transparent;  /* disable default contenteditable outline */

    white-space: pre-wrap;  /* properly display white-space */
    font-family: var(--font-family-cell);
    line-height: var(--line-height-cell);

    background-color: var(--bgcolor-cell);

    max-height:   0;
    padding:      var(--padding-cell);
    border-width: 0;
    border-color: transparent var(--border-color-cell) var(--border-color-cell) var(--border-color-cell);

    transition: max-height   var(--focus-x1-duration) var(--focus-x1-easing) var(--focus-x1-delay);
    transition: padding      var(--focus-x2-duration) var(--focus-x2-easing) var(--focus-x2-delay);
    transition: border-width var(--focus-x2-duration) var(--focus-x2-easing) var(--focus-x2-delay);
    transition: border-color var(--focus-x2-duration) var(--focus-x2-easing) var(--focus-x2-delay);

    border-radius: 0 0 var(--border-radius-cell) var(--border-radius-cell);
    border-style:  var(--border-style-cell);
}

/* tool-bar and eval-cell visible but not active */
tool-bar:has(+ eval-cell[data-visible]),
tool-bar:has(+ eval-cell[contenteditable]) {
    visibility:   visible;
    max-height:   100vh;
    border-width: var(--border-width-tool);
}
eval-cell[data-visible],
eval-cell[contenteditable] {
    max-height:   100vh;
    border-width: var(--border-width-cell);
}

/* tool-bar and eval-cell visible and active */
tool-bar:has(+ eval-cell[data-visible][data-active]),
tool-bar:has(+ eval-cell[contenteditable][data-active]) {
    border-top-color:   var(--border-color-tool-focus);
    border-right-color: var(--border-color-tool-focus);
    border-left-color:  var(--border-color-tool-focus);
}
eval-cell[data-visible][data-active],
eval-cell[contenteditable][data-active] {
    border-color: transparent var(--border-color-cell-focus) var(--border-color-cell-focus) var(--border-color-cell-focus);
}


/* color selected by eval-cell input-type */

tool-bar option,
tool-bar select {
    background-color: var(--color-type-markdown);
}

tool-bar option[value="javascript"],
tool-bar > select:has(> option[value="javascript"]:checked) {
    background-color: var(--color-type-javascript);
}

tool-bar option[value="tex"],
tool-bar > select:has(> option[value="tex"]:checked) {
    background-color: var(--color-type-tex);
}


tool-bar:has(option) {
    border-bottom-color: var(--color-type-markdown);
}

tool-bar:has(option[value="javascript"]:checked) {
    border-bottom-color: var(--color-type-javascript);
}

tool-bar:has(option[value="tex"]:checked) {
    border-bottom-color: var(--color-type-tex);
}


/* === tool-bar indicators and controls === */

tool-bar > * {
    margin: 0;  /* pack controls within tool-bar; let flex gap handle spacing */
    background-color: var(--bgcolor-tool);  /* same "default" color as parent tool-bar */
}

.tool-bar-indicator {
    display: block;
    width:  0.5em;
    height: 0.5em;
    margin: 0;
    padding: 0;
    border-radius: 50%;
    border: 1px solid var(--border-color-tool-indicator);
    background-color: var(--color-tool-indicator);
}

.tool-bar-indicator.running[data-indicator-value="on"] {
    border: 1px solid var(--border-color-tool-indicator-running);
    background-color: var(--color-tool-indicator-running);
}
.tool-bar-indicator.modified[data-indicator-value="on"] {
    border: 1px solid var(--border-color-tool-indicator-modified);
    background-color: var(--color-tool-indicator-modified);
}

tool-bar > select > option {
    background-color: var(--color-tool-type-select);
}


/* === toggle-switch === */

toggle-switch {
    appearance: none;
    border: 0;
    width:  var(--width-toggle-switch);
    height: var(--height-toggle-switch);
}

toggle-switch svg {
    width:  auto;
    height: 100%;
}

toggle-switch.tool-bar-toggle-editable                      svg .accent-fill   { fill:   var(--color-tool-toggle-fill-editable); }
toggle-switch.tool-bar-toggle-editable                      svg .accent-stroke { stroke: var(--color-tool-toggle-stroke-editable); }
toggle-switch.tool-bar-toggle-editable[aria-checked="true"] svg .accent-fill   { fill:   var(--color-tool-toggle-fill-editable-checked); }
toggle-switch.tool-bar-toggle-editable[aria-checked="true"] svg .accent-stroke { stroke: var(--color-tool-toggle-stroke-editable-checked); }

toggle-switch.tool-bar-toggle-visible                       svg .accent-fill   { fill:   var(--color-tool-toggle-fill-visible); }
toggle-switch.tool-bar-toggle-visible                       svg .accent-stroke { stroke: var(--color-tool-toggle-stroke-visible); }
toggle-switch.tool-bar-toggle-visible[aria-checked="true"]  svg .accent-fill   { fill:   var(--color-tool-toggle-fill-visible-checked); }
toggle-switch.tool-bar-toggle-visible[aria-checked="true"]  svg .accent-stroke { stroke: var(--color-tool-toggle-stroke-visible-checked); }

toggle-switch.tool-bar-toggle-autoeval                      svg .accent-fill   { fill:   var(--color-tool-toggle-fill-autoeval); }
toggle-switch.tool-bar-toggle-autoeval                      svg .accent-stroke { stroke: var(--color-tool-toggle-stroke-autoeval); }
toggle-switch.tool-bar-toggle-autoeval[aria-checked="true"] svg .accent-fill   { fill:   var(--color-tool-toggle-fill-autoeval-checked); }
toggle-switch.tool-bar-toggle-autoeval[aria-checked="true"] svg .accent-stroke { stroke: var(--color-tool-toggle-stroke-autoeval-checked); }


/* === menu === */

.menu:not(.active) {
    display: none;
}

.menubar {
    margin: 0;
    padding: 0.1rem 0 0.1rem 0;
}

.menubar>li {
    display: inline;  /* horizontal orientation for top-level items of menubar */
    padding: 0 0.5rem 0 0.5rem;
}

.menubar .menuitem {
    list-style-type: none;
    min-width: max-content;
}

.menuitem * {
    user-select: none;
}

.menuitem .menuitem-label {
    font-family: sans-serif;
    font-size: 90%;
}

.menubar .menuitem.checked::before {
    content: "\2713";  /* unicode check mark */
    position: absolute;
    left: 0.5em;
}

.menubar div {
    display: inline;
}

.menu {
    position: absolute;
    z-index: 999;
    background-color: var(--bgcolor-menu);
    padding: 0.25rem 0 0.25rem 0;  /* override standard ul/li padding */
    border-radius: 0.25rem;
    border: 1px solid var(--color-menu-border);
    box-shadow: 3px 3px 16px var(--color-menu-border-shadow);

    /* eliminate default styling for menu elements */
    margin-block-start:   0;
    margin-block-end:     0;
    margin-inline-start:  0;
    margin-inline-end:    0;
    padding-inline-start: 0;
}

.menuitem {
    color: var(--color-menuitem-text);
}

.menuitem.disabled {
    color: var(--color-menuitem-text-disabled);
}

.menuitem.selected {
    background-color: var(--bgcolor-menuitem-selected);
}

.menu .menuitem:not(.menuitem-separator) {
    padding: 0 0.5rem 0 1.5rem;
}

.menu .menuitem.menuitem-separator {
    margin: 0.2rem 0 0.2rem 0;
    height: 0px;
    color: transparent;
    border-bottom: 1px solid var(--color-menuitem-separator);
}

.menu .menuitem .menuitem-annotation {
    margin-left: 2rem;
    float: right;
}

.menu .menuitem kbd {
    margin: 0 0 0 0.5rem;
}


/* === dialog === */

dialog {
    border-radius: 0.5rem;
    box-shadow: 3px 3px 16px var(--color-dialog-shadow);
}

dialog .dialog_text {
    margin: 0.5rem 0.5rem 0.5rem 0;
}

dialog button,
dialog input[type="button"] {
    margin: 0.5rem 0.5rem 0.5rem 0;
}

dialog .dialog_decline {
    display: inline;
}

dialog .dialog_accept {
    display: inline;
}


/* === settings-dialog === */

.settings-dialog .dialog_text {
    font-size: x-large;
    font-style: italic;
}

.settings-dialog .section {
    display: flex;
}

.settings-dialog {
    background-color: var(--bgcolor-settings);
}

.settings-dialog [data-section] {
    position: relative;
    min-width: max-content;
    margin: 2rem 0 0 1rem;
    padding: 1rem;
    height: max-content;
    border-radius: 8px;
    border: 1px solid var(--color-border-settings-data-section);
    color:            var(--color-settings-data-section);
    background-color: var(--bgcolor-settings-data-section);
}

.settings-dialog [data-section]::before {  /* named section heading */
    position: absolute;
    content: attr(data-section);
    left: 0.8rem;
    top: -0.7rem;
    padding: 0 1rem;
    border-radius: 4px;
    border: 1px solid var(--color-border-settings-data-section-heading);
    color:            var(--color-settings-data-section-heading);
    background-color: var(--bgcolor-settings-data-section-heading);
    font-style: italic;
}

.settings-dialog [data-section] [data-setting] label {
    display: inline-block;
    width: 9rem;
    text-align: right;
    font-family: sans-serif;
    font-size: small;
    user-select: none;
}

.settings-dialog [data-section] [data-setting] input,
.settings-dialog [data-section] [data-setting] select {
    color:            var(--color-settings-data-section-data-setting-control);
    background-color: var(--bgcolor-settings-data-section-data-setting-control);
    margin: 0.25rem;
}

.settings-dialog [data-section] [data-setting] input[type="text"] {
    width: 5rem;
}

.settings-dialog .warning {
    display: none;
    width: 18rem;
    margin: 2rem 0 0 1rem;
    padding: 1rem;
    height: max-content;
    border-radius: 8px;
    border: 1px solid var(--color-border-settings-warning);
    color:            var(--color-settings-warning);
    background-color: var(--bgcolor-settings-warning);
}
.settings-dialog .warning p:first-child {
    margin-block-start: 0;
}
.settings-dialog .warning p:last-child {
    margin-block-end: 0;
}
.settings-dialog .show-emacs-warning .emacs-warning {
    display: block;
}

.settings-dialog input[type="submit"] {
    margin-top: 1rem;
}

.settings-dialog .error-message {
    display: none;
    margin: 2rem 0 0 1rem;
    max-width: 25vx;
    height: fit-content;
    padding: 0.5rem;
    border-radius: 5pt;
    border: 1px solid var(--color-border-settings-error);
    color:            var(--color-settings-error);
    background-color: var(--bgcolor-settings-error);
}
.settings-dialog .error-message.active {
    display: block;
}


/* === print media queries === */

@media not print {
    /* nothing for now */
}

@media print {

    header {
        display: none;
    }

    eval-cell: {
        /* no highlighted border */
        border-color: transparent var(--border-color-cell) var(--border-color-cell) var(--border-color-cell) !important;
    }

    .eval-cell-output {
        /* no highlight */
        border-width: 0 0 0 var(--active-output-highlight-width) !important;
        border-color: transparent !important;
        border-style: var(--active-output-highlight-style) !important;
    }
}
