:root {
    /* metrics */

    --height-controls:      1.5rem;

    --padding-tool:         0 0.5em;
    --gap-tool:             0.5em;

    --padding-cell:         0 0.5em;
    --line-height-cell:     140%;
    --font-family-cell:     monospace;

    --padding-output:       0.5em;
    --padding-intercell:    1em;

    --width-toggle-switch:  1.5rem;
    --height-toggle-switch: 1.5rem;


    /* border */

    --border-radius-controls:  0.125em;
    --border-width-controls:   1px;
    --border-style-controls:   solid;
    --border-color-controls:   #ccc;

    --border-radius-tool:      0;
    --border-width-tool:       1px;
    --border-style-tool:       solid;
    --border-color-tool:       #ccc;
    --border-color-tool-focus: black;

    --border-radius-cell:      0.125em;
    --border-width-cell:       1px;
    --border-style-cell:       solid;
    --border-color-cell:       #ccc;
    --border-color-cell-focus: black;


    /* color */

    --bgcolor-body:                              #eee;
    --bgcolor-controls:                          #f8f8f8;
    --bgcolor-tool:                              hsl(0deg 0% 98% / 100%);
    --bgcolor-cell:                              hsl(0deg 0% 99% / 100%);
    --bgcolor-output:                            white;

    --color-type-markdown:                       hsl(205deg 100%  94% / 100%);
    --color-type-tex:                            hsl( 45deg  81%  87% / 100%);
    --color-type-javascript:                     hsl( 85deg 100%  85% / 100%);


    --color-tool-toggle-fill-editable:           transparent;
    --color-tool-toggle-stroke-editable:         hsl(0deg 9% 82% / 100%);
    --color-tool-toggle-fill-editable-checked:   transparent;
    --color-tool-toggle-stroke-editable-checked: hsl(0deg 60% 70% / 100%);

    --color-tool-toggle-fill-visible:            transparent;
    --color-tool-toggle-stroke-visible:          hsl(0deg 9% 82% / 100%);
    --color-tool-toggle-fill-visible-checked:    chartreuse;
    --color-tool-toggle-stroke-visible-checked:  hsl(0deg 100% 45% / 100%);

    --color-tool-toggle-fill-autoeval:           transparent;
    --color-tool-toggle-stroke-autoeval:         hsl(0deg 9% 82% / 100%);
    --color-tool-toggle-fill-autoeval-checked:   transparent;
    --color-tool-toggle-stroke-autoeval-checked: hsl(0deg 60% 70% / 100%);

    --border-color-tool-indicator:               hsl(0deg 9% 82% / 100%);
    --color-tool-indicator:                      hsl(0deg 0% 97% / 100%);

    --border-color-tool-indicator-running:       black;
    --color-tool-indicator-running:              hsl(120deg 94% 40% / 100%);

    --border-color-tool-indicator-modified:      black;
    --color-tool-indicator-modified:             hsl(0deg 60% 85% / 100%);

    --color-tool-type-select:                    hsl(0deg 0% 97% / 100%);


    /* active output element highlight */

    --active-output-highlight-width: 4px;
    --active-output-highlight-color: hsl(190deg 100% 15% / 100%);
    --active-output-highlight-style: dotted;


    /* focus transition */

    --focus-x1-delay:    0s;
    --focus-x1-duration: 0.2s;
    --focus-x1-easing:   cubic-bezier(0.42, 0.0, 0.0, 1.0);

    --focus-x2-delay:    calc(var(--focus-x1-duration) / 4);
    --focus-x2-duration: 0.1s;
    --focus-x2-easing:   cubic-bezier(0.42, 0.0, 0.0, 1.0);
}


body {
    margin: 0 0 0 1px;  /* prevent left border from getting absorbed into browser window frame */
    background-color: var(--bgcolor-body);
}

#controls {
    display: flex;
    align-items: flex-end;
    justify-content: flex-start;

    height: var(--height-controls);
    background-color: var(--bgcolor-controls);
    border-bottom: var(--border-width-controls) var(--border-style-controls) var(--border-color-controls);
}

#controls > tool-bar {  /* next to menu */
    align-self: center;
    margin-left: auto;  /* push to far right */

    visibility: visible;
    max-height: 100vh;
    padding: 0 0.5em;
    border: 0;
    background-color: transparent;
}

.eval-cell-output {
    display: block;
    white-space: pre-wrap;  /* display white-space properly */
    line-height: 140%;

    padding: var(--padding-output);
    background-color: var(--bgcolor-output);

    /* no highlight */
    border-width: 0 0 0 var(--active-output-highlight-width);
    border-color: transparent;
    border-style: var(--active-output-highlight-style);
}
.eval-cell-output:has(+ tool-bar),
.eval-cell-output:has(+ eval-cell) {
    padding-bottom: var(--padding-intercell);
}


/* output element active highlight */
eval-cell[data-active] + .eval-cell-output {
    border-width: 0 0 0 var(--active-output-highlight-width);
    border-color: transparent transparent transparent var(--active-output-highlight-color);
    border-style: var(--active-output-highlight-style);
}


/* === visible/active - animated attributes === */

/* tool-bar and eval-cell base definitions: the define a collapsed state */

tool-bar {
    overflow: hidden;

    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: var(--gap-tool);

    background-color: var(--bgcolor-tool);

    /* prevent tabbing to contained controls by setting visibility:hidden */
    /* this is necessary because we don't set display:none because we want to animate the transition */
    visibility: hidden;

    max-height:   0;
    padding:      var(--padding-tool);
    border-width: 0;
    /* split border-color into the three specific sides; the bottom side is controlled separately by the input type selector */
    border-top-color:   var(--border-color-tool);
    border-right-color: var(--border-color-tool);
    border-left-color:  var(--border-color-tool);

    transition: max-height   var(--focus-x1-duration) var(--focus-x1-easing) var(--focus-x1-delay);
    transition: padding      var(--focus-x2-duration) var(--focus-x2-easing) var(--focus-x2-delay);
    transition: border-width var(--focus-x2-duration) var(--focus-x2-easing) var(--focus-x2-delay);
    transition: border-color var(--focus-x2-duration) var(--focus-x2-easing) var(--focus-x2-delay);

    border-radius: var(--border-radius-cell) var(--border-radius-cell) 0 0;
    border-style:  var(--border-style-tool);

}

eval-cell {
    overflow: hidden;

    display: block;
    margin:  0;

    outline: 0px solid transparent;  /* disable default contenteditable outline */

    white-space: pre-wrap;  /* properly display white-space */
    font-family: var(--font-family-cell);
    line-height: var(--line-height-cell);

    background-color: var(--bgcolor-cell);

    max-height:   0;
    padding:      var(--padding-cell);
    border-width: 0;
    border-color: transparent var(--border-color-cell) var(--border-color-cell) var(--border-color-cell);

    transition: max-height   var(--focus-x1-duration) var(--focus-x1-easing) var(--focus-x1-delay);
    transition: padding      var(--focus-x2-duration) var(--focus-x2-easing) var(--focus-x2-delay);
    transition: border-width var(--focus-x2-duration) var(--focus-x2-easing) var(--focus-x2-delay);
    transition: border-color var(--focus-x2-duration) var(--focus-x2-easing) var(--focus-x2-delay);

    border-radius: 0 0 var(--border-radius-cell) var(--border-radius-cell);
    border-style:  var(--border-style-cell);
}

/* tool-bar and eval-cell visible but not active */
tool-bar:has(+ eval-cell[data-visible]),
tool-bar:has(+ eval-cell[contenteditable]) {
    visibility:   visible;
    max-height:   100vh;
    border-width: var(--border-width-tool);
}
eval-cell[data-visible],
eval-cell[contenteditable] {
    max-height:   100vh;
    border-width: var(--border-width-cell);
}

/* tool-bar and eval-cell visible and active */
tool-bar:has(+ eval-cell[data-visible][data-active]),
tool-bar:has(+ eval-cell[contenteditable][data-active]) {
    border-top-color:   var(--border-color-tool-focus);
    border-right-color: var(--border-color-tool-focus);
    border-left-color:  var(--border-color-tool-focus);
}
eval-cell[data-visible][data-active],
eval-cell[contenteditable][data-active] {
    border-color: transparent var(--border-color-cell-focus) var(--border-color-cell-focus) var(--border-color-cell-focus);
}


/* color selected by eval-cell input-type */

tool-bar option,
tool-bar select {
    background-color: var(--color-type-markdown);
}

tool-bar option[value="javascript"],
tool-bar > select:has(> option[value="javascript"]:checked) {
    background-color: var(--color-type-javascript);
}

tool-bar option[value="tex"],
tool-bar > select:has(> option[value="tex"]:checked) {
    background-color: var(--color-type-tex);
}


tool-bar:has(option) {
    border-bottom-color: var(--color-type-markdown);
}

tool-bar:has(option[value="javascript"]:checked) {
    border-bottom-color: var(--color-type-javascript);
}

tool-bar:has(option[value="tex"]:checked) {
    border-bottom-color: var(--color-type-tex);
}


/* === tool-bar indicators and controls === */

tool-bar > * {
    margin: 0;  /* pack controls within tool-bar; let flex gap handle spacing */
    background-color: var(--bgcolor-tool);  /* same "default" color as parent tool-bar */
}

.tool-bar-indicator {
    display: block;
    width:  0.5em;
    height: 0.5em;
    margin: 0;
    padding: 0;
    border-radius: 50%;
    border: 1px solid var(--border-color-tool-indicator);
    background-color: var(--color-tool-indicator);
}

.tool-bar-indicator.running[data-indicator-value="on"] {
    border: 1px solid var(--border-color-tool-indicator-running);
    background-color: var(--color-tool-indicator-running);
}
.tool-bar-indicator.modified[data-indicator-value="on"] {
    border: 1px solid var(--border-color-tool-indicator-modified);
    background-color: var(--color-tool-indicator-modified);
}

tool-bar > select > option {
    background-color: var(--color-tool-type-select);
}


/* === toggle-switch === */

toggle-switch {
    appearance: none;
    border: 0;
    width:  var(--width-toggle-switch);
    height: var(--height-toggle-switch);
}

toggle-switch svg {
    width:  auto;
    height: 100%;
}

toggle-switch.tool-bar-toggle-editable                      svg .accent-fill   { fill:   var(--color-tool-toggle-fill-editable); }
toggle-switch.tool-bar-toggle-editable                      svg .accent-stroke { stroke: var(--color-tool-toggle-stroke-editable); }
toggle-switch.tool-bar-toggle-editable[aria-checked="true"] svg .accent-fill   { fill:   var(--color-tool-toggle-fill-editable-checked); }
toggle-switch.tool-bar-toggle-editable[aria-checked="true"] svg .accent-stroke { stroke: var(--color-tool-toggle-stroke-editable-checked); }

toggle-switch.tool-bar-toggle-visible                       svg .accent-fill   { fill:   var(--color-tool-toggle-fill-visible); }
toggle-switch.tool-bar-toggle-visible                       svg .accent-stroke { stroke: var(--color-tool-toggle-stroke-visible); }
toggle-switch.tool-bar-toggle-visible[aria-checked="true"]  svg .accent-fill   { fill:   var(--color-tool-toggle-fill-visible-checked); }
toggle-switch.tool-bar-toggle-visible[aria-checked="true"]  svg .accent-stroke { stroke: var(--color-tool-toggle-stroke-visible-checked); }

toggle-switch.tool-bar-toggle-autoeval                      svg .accent-fill   { fill:   var(--color-tool-toggle-fill-autoeval); }
toggle-switch.tool-bar-toggle-autoeval                      svg .accent-stroke { stroke: var(--color-tool-toggle-stroke-autoeval); }
toggle-switch.tool-bar-toggle-autoeval[aria-checked="true"] svg .accent-fill   { fill:   var(--color-tool-toggle-fill-autoeval-checked); }
toggle-switch.tool-bar-toggle-autoeval[aria-checked="true"] svg .accent-stroke { stroke: var(--color-tool-toggle-stroke-autoeval-checked); }


/* === print media queries === */

@media not print {
    /* nothing for now */
}

@media print {

    #controls {
        display: none;
    }

    eval-cell: {
        /* no highlighted border */
        border-color: transparent var(--border-color-cell) var(--border-color-cell) var(--border-color-cell) !important;
    }

    .eval-cell-output {
        /* no highlight */
        border-width: 0 0 0 var(--active-output-highlight-width) !important;
        border-color: transparent !important;
        border-style: var(--active-output-highlight-style) !important;
    }
}
