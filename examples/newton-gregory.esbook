{
    "nb_type": "esbook",
    "nb_version": "2.0.0",
    "elements": [
        {
            "id": "id-1876a252-56b2-43c0-913b-1e144f8d87fc",
            "input": "",
            "output": [],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        },
        {
            "id": "id-e8b2d2cc-4e3f-4f68-913f-18b410da3687",
            "input": "## Newton-Gregory Forward Difference Interpolation and Extrapolation\n\nSee https://www.youtube.com/watch?v=4AuV93LOPcE&t=357s\n\"Why don't they teach Newton's calculus of 'What comes next?'\"",
            "output": [
                {
                    "type": "text",
                    "text": "## Newton-Gregory Forward Difference Interpolation and Extrapolation\n\nSee https://www.youtube.com/watch?v=4AuV93LOPcE&t=357s\n\"Why don't they teach Newton's calculus of 'What comes next?'\""
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        },
        {
            "id": "id-754c31c0-0f27-41bc-9636-c16886821d89",
            "input": "${formatting({ align: 'left', indent: '2em' })}\n$\n\\def\\D{\\Delta}\n\\def\\iddots{{\\kern3mu\\raise1mu{.}\\kern3mu\\raise6mu{.}\\kern3mu\\raise12mu{.}}}\n$\n\n---\n\nLet $n,i,j,l \\in \\mathbb Z$, $n > 0$, $0 \\le i,j,l \\le n-1$.\n$ $\nGiven a function $f:\\mathbb R \\rightarrow \\mathbb R$ and $n$ observations $f(0), f(1), ..., f(n-1)$, define the forward differences $\\D^i_j$ as follows:\n$$\n\\begin{array}{ccccccccc}\nf(0) &        & f(1)    &        & f(2)       &            & f(3)       & \\dots   & f(n-2)     &            & f(n-1) \\\\\n     & \\D^1_0 &         & \\D^1_1 &            & \\D^1_2     &            & \\dots   &            & \\D^1_{n-2} &        \\\\\n     &        & \\D^2_0  &        & \\D^2_1     &            & \\D^2_2     & \\dots   & \\D^2_{n-3} &            &        \\\\\n     &        &         & \\ddots &            & \\ddots     &            & \\iddots &            &            &        \\\\\n     &        &         &        & \\D^{n-2}_0 &            & \\D^{n-2}_1 &         &            &            &        \\\\\n     &        &         &        &            & \\D^{n-1}_0 &            &         &            &            &        \\\\\n\\end{array}\n$$\nwhere each $\\D^i_j$ if the result of subtracting its left parent from its right parent.\n\nExpanding downward, it can be seen that each $\\D^i_j$ can be computed directly from the observed values as follows:\n$$\n\\begin{align}\n\\D^i_j &= \\sum_{k=0}^{i}{(-1)^{i-k}{i \\choose k}f(j+k)} \\tag{direct calculation} \\\\\n\\end{align}\n$$\nNote that $\\D^0_j = f(j)$.\n$ $\nNow, with $C_i = \\D^i_0$, $f$ may be approximated by any of a family of polynomial functions $f_{(i)}$:\n$$\n\\begin{align}\nf_{(i)}(x) &= \\sum_{k=0}^i C_k {x \\choose k} \\tag{Newton-Gregory Formula} \\\\\n           &= \\sum_{k=0}^i \\Bigg( \\sum_{l=0}^{k}{(-1)^{k-l}{k \\choose l}f(l)} \\Bigg) {x \\choose k} \\\\\n\\end{align}\n$$\nNote that $f_{(n-1)}$ is maximally accurate compared to $f_{(i < n-1)}$, however some of these may have the same accuracy, depending on f.\n**$\\rightarrow$ need to show that $f_{(i)}(x)$ are the desired polynomial approximations $\\leftarrow$**\n\n---\n\nGiven:\n$$\n\\begin{align}\n{n \\choose k} &= \\frac{n!}{k!(n-k)!}                  \\tag{standard definition} \\\\\n              &= \\frac{n^{\\underline{k}}}{k!}         \\tag{falling factorial formulation} \\\\\n              &= \\frac{1}{k!}\\prod_{i=0}^{k-1}{(n-i)} \\tag{expansion of falling factorial} \\\\\n\\end{align}\n$$\npoints the way to how to compute $f_{(i)}(x)$ for $x \\in \\mathbb R$ and also for $x$ symbolically.\n**$\\rightarrow$ need to show that this extension is valid $\\leftarrow$**\n\n$ $\nNote also that:\n$$\n\\begin{align}\n{n \\choose k} &= {n-1 \\choose k-1} + {n-1 \\choose k} \\tag{combinatorial identity} \\\\\n              &= \\frac{(n-1)^{\\underline{k-1}}}{(k-1)!} + \\frac{(n-1)^{\\underline{k}}}{k!} \\\\\n              &= \\frac{1}{(k-1)!}\\prod_{i=0}^{k-2}{(n-1-i)} + \\frac{1}{k!}\\prod_{i=0}^{k-1}{(n-1-i)} \\\\\n\\end{align}\n$$\nAlso:\n$$\n\\begin{align}\nk{n \\choose k} &= n{n-1 \\choose k-1} \\tag{combinatorial identity} \\\\\n\\end{align}\n$$\n\n\n",
            "output": [
                {
                    "type": "text",
                    "text": "\n$\n\\def\\D{\\Delta}\n\\def\\iddots{{\\kern3mu\\raise1mu{.}\\kern3mu\\raise6mu{.}\\kern3mu\\raise12mu{.}}}\n$\n\n---\n\nLet $n,i,j,l \\in \\mathbb Z$, $n > 0$, $0 \\le i,j,l \\le n-1$.\n$ $\nGiven a function $f:\\mathbb R \\rightarrow \\mathbb R$ and $n$ observations $f(0), f(1), ..., f(n-1)$, define the forward differences $\\D^i_j$ as follows:\n$$\n\\begin{array}{ccccccccc}\nf(0) &        & f(1)    &        & f(2)       &            & f(3)       & \\dots   & f(n-2)     &            & f(n-1) \\\\\n     & \\D^1_0 &         & \\D^1_1 &            & \\D^1_2     &            & \\dots   &            & \\D^1_{n-2} &        \\\\\n     &        & \\D^2_0  &        & \\D^2_1     &            & \\D^2_2     & \\dots   & \\D^2_{n-3} &            &        \\\\\n     &        &         & \\ddots &            & \\ddots     &            & \\iddots &            &            &        \\\\\n     &        &         &        & \\D^{n-2}_0 &            & \\D^{n-2}_1 &         &            &            &        \\\\\n     &        &         &        &            & \\D^{n-1}_0 &            &         &            &            &        \\\\\n\\end{array}\n$$\nwhere each $\\D^i_j$ if the result of subtracting its left parent from its right parent.\n\nExpanding downward, it can be seen that each $\\D^i_j$ can be computed directly from the observed values as follows:\n$$\n\\begin{align}\n\\D^i_j &= \\sum_{k=0}^{i}{(-1)^{i-k}{i \\choose k}f(j+k)} \\tag{direct calculation} \\\\\n\\end{align}\n$$\nNote that $\\D^0_j = f(j)$.\n$ $\nNow, with $C_i = \\D^i_0$, $f$ may be approximated by any of a family of polynomial functions $f_{(i)}$:\n$$\n\\begin{align}\nf_{(i)}(x) &= \\sum_{k=0}^i C_k {x \\choose k} \\tag{Newton-Gregory Formula} \\\\\n           &= \\sum_{k=0}^i \\Bigg( \\sum_{l=0}^{k}{(-1)^{k-l}{k \\choose l}f(l)} \\Bigg) {x \\choose k} \\\\\n\\end{align}\n$$\nNote that $f_{(n-1)}$ is maximally accurate compared to $f_{(i < n-1)}$, however some of these may have the same accuracy, depending on f.\n**$\\rightarrow$ need to show that $f_{(i)}(x)$ are the desired polynomial approximations $\\leftarrow$**\n\n---\n\nGiven:\n$$\n\\begin{align}\n{n \\choose k} &= \\frac{n!}{k!(n-k)!}                  \\tag{standard definition} \\\\\n              &= \\frac{n^{\\underline{k}}}{k!}         \\tag{falling factorial formulation} \\\\\n              &= \\frac{1}{k!}\\prod_{i=0}^{k-1}{(n-i)} \\tag{expansion of falling factorial} \\\\\n\\end{align}\n$$\npoints the way to how to compute $f_{(i)}(x)$ for $x \\in \\mathbb R$ and also for $x$ symbolically.\n**$\\rightarrow$ need to show that this extension is valid $\\leftarrow$**\n\n$ $\nNote also that:\n$$\n\\begin{align}\n{n \\choose k} &= {n-1 \\choose k-1} + {n-1 \\choose k} \\tag{combinatorial identity} \\\\\n              &= \\frac{(n-1)^{\\underline{k-1}}}{(k-1)!} + \\frac{(n-1)^{\\underline{k}}}{k!} \\\\\n              &= \\frac{1}{(k-1)!}\\prod_{i=0}^{k-2}{(n-1-i)} + \\frac{1}{k!}\\prod_{i=0}^{k-1}{(n-1-i)} \\\\\n\\end{align}\n$$\nAlso:\n$$\n\\begin{align}\nk{n \\choose k} &= n{n-1 \\choose k-1} \\tag{combinatorial identity} \\\\\n\\end{align}\n$$\n\n\n"
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "2em"
            }
        },
        {
            "id": "id-8c921f7a-6b52-49f7-bebe-ba8a6fcb84f6",
            "input": "// Try out the sequence from the Mathologer video\n\nconst observations = [1, 1, 2, 4, 8, 16, 31];  // the sequence given in the Mathologer video\n// Actually, in the sequence above, f(0) is added and defined as 1; 0 points subdividing a circle gives the whole circle....\n\n_.clearVars();\n_.setFunction('choose', ['n', 'm'], 'n!/m!/(n-m)!');\n\nfor (let j = 0; j < observations.length; j++) {\n    _.setVar(`f_j${j}`,    observations[j]);\n    _.setVar(`d_i0_j${j}`, `f_j${j}`);\n}\n_.setVar('observations', `vector(${observations.join(', ')})`);\n\nfor (let i = 1; i < observations.length; i++) {\n    for (let j = 0; j < observations.length-i; j++) {\n        _.setVar(`d_i${i}_j${j}`, `d_i${i-1}_j${j+1} - d_i${i-1}_j${j}`);\n    }\n}\n\nawait println('### Results for computing differences top-to-bottom:');\nfor (let i = 0; i < observations.length; i++) {\n    await printf('%2d:', i);\n    for (let s = 0; s < i; s++) await printf('   ');\n    for (let j = 0; j < observations.length-i; j++) {\n        await printf(' %5s', _(`d_i${i}_j${j}`));\n    }\n    await println();\n}\n\nawait html('br');\n\nawait println('**Comparing computed differences with the values from the direct computation equation**');\nlet wrong_results = false;\nfor (let i = 0; i < observations.length; i++) {\n    for (let j = 0; j < observations.length-i; j++) {\n        const computed = _(`d_i${i}_j${j}`).toString();\n        const direct = _.simplify(_(`sum((-1)^(${i}-k)*choose(${i}, k)*vecget(observations, ${j}+k), k, 0, ${i})`)).toString();\n        if (direct !== computed) {\n            wrong_results = true;\n            await printf('>>> wrong: i=%d, j=%d, computed=%s, direct=%s\\n', i, j, computed, direct);\n        }\n    }\n}\nif (!wrong_results) {\n    await println('$\\\\rightarrow$ all direct results matched computed values');\n}\n\n// set Ci values\nfor (let i = 0; i < observations.length; i++) {\n    _.setVar(`C_i${i}`, `d_i${i}_j0`);\n}\n_.setVar('C', `vector(${observations.map((_, i) => `C_i${i}`).join(', ')})`);",
            "output": [
                {
                    "type": "text",
                    "text": "### Results for computing differences top-to-bottom:\n 0:     1     1     2     4     8    16    31\n 1:        0     1     2     4     8    15\n 2:           1     1     2     4     7\n 3:              0     1     2     3\n 4:                 1     1     1\n 5:                    0     0\n 6:                       0\n"
                },
                {
                    "type": "html",
                    "tag": "br"
                },
                {
                    "type": "text",
                    "text": "**Comparing computed differences with the values from the direct computation equation**\n$\\rightarrow$ all direct results matched computed values\n"
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        },
        {
            "id": "id-3bc80d07-8bc0-484b-91a4-6eabb49b99aa",
            "input": "// Check the direct computation\n\n_.setFunction('ff', ['i', 'x'], `sum(vecget(C, k) * product(x-kk, kk, 0, k-1) / k!, k, 0, i)`);\n\nconst n = +_('size(observations)');\n\nconst extrapolate_count = 12;  // extrapolate this many points beyond n\n\n// build a markdown table to hold the output\n// begin heading\nawait printf('| x: |');\nfor (let x = 0; x < n+extrapolate_count; x++) {\n    await printf('%s|', `*${x}*`);\n}\nawait println();\n// begin separator line\nawait printf('|---:|');\nfor (let x = 0; x < n+extrapolate_count; x++) {\n    await printf(':---:|');\n}\nawait println();\n// rest of table\nfor (let i = 0; i < n; i++) {\n    await printf('ff(%d,x) |', i);\n    for (let x = 0; x < n+extrapolate_count; x++) {\n        await printf('%s |', _.simplify(_.expand(`ff(${i}, ${x})`)).toString());\n    }\n    await println();\n}",
            "output": [
                {
                    "type": "text",
                    "text": "| x: |*0*|*1*|*2*|*3*|*4*|*5*|*6*|*7*|*8*|*9*|*10*|*11*|*12*|*13*|*14*|*15*|*16*|*17*|*18*|\n|---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|\nff(0,x) |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |\nff(1,x) |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |1 |\nff(2,x) |1 |1 |2 |4 |7 |11 |16 |22 |29 |37 |46 |56 |67 |79 |92 |106 |121 |137 |154 |\nff(3,x) |1 |1 |2 |4 |7 |11 |16 |22 |29 |37 |46 |56 |67 |79 |92 |106 |121 |137 |154 |\nff(4,x) |1 |1 |2 |4 |8 |16 |31 |57 |99 |163 |256 |386 |562 |794 |1093 |1471 |1941 |2517 |3214 |\nff(5,x) |1 |1 |2 |4 |8 |16 |31 |57 |99 |163 |256 |386 |562 |794 |1093 |1471 |1941 |2517 |3214 |\nff(6,x) |1 |1 |2 |4 |8 |16 |31 |57 |99 |163 |256 |386 |562 |794 |1093 |1471 |1941 |2517 |3214 |\n"
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        },
        {
            "id": "id-632b7b0b-0fe9-42e2-a0ab-d7ebc2f3c786",
            "input": "See https://oeis.org/A000127\n\"Maximal number of regions obtained by joining n points around a circle by straight lines. Also number of regions in 4-space formed by n-1 hyperplanes.\"\n1, 2, 4, 8, 16, 31, 57, 99, 163, 256, 386, 562, 794, 1093, 1471, 1941, 2517, 3214, 4048, ...",
            "output": [
                {
                    "type": "text",
                    "text": "See https://oeis.org/A000127\n\"Maximal number of regions obtained by joining n points around a circle by straight lines. Also number of regions in 4-space formed by n-1 hyperplanes.\"\n1, 2, 4, 8, 16, 31, 57, 99, 163, 256, 386, 562, 794, 1093, 1471, 1941, 2517, 3214, 4048, ..."
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        },
        {
            "id": "id-17b5408e-ae45-42e1-8e21-3c940a8492fa",
            "input": "---\n## Generalization",
            "output": [
                {
                    "type": "text",
                    "text": "---\n## Generalization"
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        },
        {
            "id": "id-55943619-10e4-4e09-becc-306a1f52636f",
            "input": "//\n\nfunction define_sequence_from_observations(observations) {\n    if (!Array.isArray(observations) || observations.length <= 0) {\n        throw new Error('observations must be an array with at least one element');\n    }\n    _.clearVars();\n    _.setFunction('choose', ['n', 'm'], 'n!/m!/(n-m)!');\n    \n    _.setVar('observations', `vector(${observations.join(', ')})`);\n    \n    _.setFunction('delta', ['i', 'j'], `sum((-1)^(i-kx)*choose(i, kx)*vecget(observations, j+kx), kx, 0, i)`);\n    _.setFunction('C', ['i'], 'delta(i, 0)');\n    _.setFunction('ff', ['i', 'x'], `sum(C(k) * product(x-kk, kk, 0, k-1) / k!, k, 0, i)`);\n}\n\nvars({ define_sequence_from_observations });\n\nconst observations = [1, 1, 2, 4, 8, 16, 31];\ndefine_sequence_from_observations(observations);\n\nconst i = 4\nconst x = 14;\nawait println(`observations = [${observations.join(', ')}]`);\nawait html('br');\nawait printf(`$ f_{(${i})}(${x}) = %s $\\n`, _.simplify(`ff(${i}, ${x})`).toTeX());",
            "output": [
                {
                    "type": "text",
                    "text": "observations = [1, 1, 2, 4, 8, 16, 31]\n"
                },
                {
                    "type": "html",
                    "tag": "br"
                },
                {
                    "type": "text",
                    "text": "$ f_{(4)}(14) = 1093 $\n"
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        },
        {
            "id": "id-f88f36ff-7863-4287-a937-c34802dd583f",
            "input": "---\n### Now, symbolically...",
            "output": [
                {
                    "type": "text",
                    "text": "---\n### Now, symbolically..."
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        },
        {
            "id": "id-109e861f-a077-4c27-a9bf-ff03ceedc8dd",
            "input": "//\nconst full_observations = [ 'y0', 'y1', 'y2', 'y3', 'y4' ];\n\nfor (let count = 1; count <= full_observations.length; count++) {\n    const observations = full_observations.slice(0, count);\n\n    await println(`observations = [${observations.join(', ')}]`);\n    await html('br');\n\n    define_sequence_from_observations(observations);\n\n    const i = observations.length-1;  // choose the maximal i for ff(i, x)\n\n    const p = _.simplify(`ff(${i}, x)`);\n\n    await printf(`$ f_{(${i})}(x) $ = $ %s $\\n`, p.toTeX());\n\n    // factor p by the observations\n    const coeffs = {};\n    const m = {};\n    let subp = p;\n    for (const s of observations) {\n        coeffs[s] = _.coeffs(subp, s);\n        m[s] = _.vecget(coeffs[s], 1);\n        subp = _.vecget(coeffs[s], 0);\n    }\n    const c = _.simplify(subp);\n\n    for (const xform of [ (x) => x, _.simplify ]) {\n        let prefix = '=';\n        for (const s of observations) {\n            await printf(`%8s %4s * ( $%s$ ) +\\n`, prefix, s, xform(m[s]).toTeX());\n            prefix = '';\n        }\n        await printf('%8s %4s $%s$\\n', '', '', xform(c).toTeX());\n    }\n\n    await html('hr')\n}",
            "output": [
                {
                    "type": "text",
                    "text": "observations = [y0]\n"
                },
                {
                    "type": "html",
                    "tag": "br"
                },
                {
                    "type": "text",
                    "text": "$ f_{(0)}(x) $ = $ y0 $\n       =   y0 * ( $1$ ) +\n              $0$\n       =   y0 * ( $1$ ) +\n              $0$\n"
                },
                {
                    "type": "html",
                    "tag": "hr"
                },
                {
                    "type": "text",
                    "text": "observations = [y0, y1]\n"
                },
                {
                    "type": "html",
                    "tag": "br"
                },
                {
                    "type": "text",
                    "text": "$ f_{(1)}(x) $ = $ -x \\cdot y0+x \\cdot y1+y0 $\n       =   y0 * ( $-x+1$ ) +\n           y1 * ( $x$ ) +\n              $0$\n       =   y0 * ( $-\\left(x-1\\right)$ ) +\n           y1 * ( $x$ ) +\n              $0$\n"
                },
                {
                    "type": "html",
                    "tag": "hr"
                },
                {
                    "type": "text",
                    "text": "observations = [y0, y1, y2]\n"
                },
                {
                    "type": "html",
                    "tag": "br"
                },
                {
                    "type": "text",
                    "text": "$ f_{(2)}(x) $ = $ \\frac{\\left(-2 \\cdot x^{2} \\cdot y1-3 \\cdot x \\cdot y0-x \\cdot y2+4 \\cdot x \\cdot y1+x^{2} \\cdot y0+x^{2} \\cdot y2+2 \\cdot y0\\right)}{2} $\n       =   y0 * ( $\\frac{x^{2}}{2}-\\frac{3 \\cdot x}{2}+1$ ) +\n           y1 * ( $-x^{2}+2 \\cdot x$ ) +\n           y2 * ( $\\frac{x^{2}}{2}-\\frac{x}{2}$ ) +\n              $0$\n       =   y0 * ( $\\frac{\\left(x-1\\right) \\cdot \\left(x-2\\right)}{2}$ ) +\n           y1 * ( $-x \\cdot \\left(x-2\\right)$ ) +\n           y2 * ( $\\frac{\\left(x-1\\right) \\cdot x}{2}$ ) +\n              $0$\n"
                },
                {
                    "type": "html",
                    "tag": "hr"
                },
                {
                    "type": "text",
                    "text": "observations = [y0, y1, y2, y3]\n"
                },
                {
                    "type": "html",
                    "tag": "br"
                },
                {
                    "type": "text",
                    "text": "$ f_{(3)}(x) $ = $ -\\frac{x^{2} \\cdot y3}{2}-\\frac{x^{3} \\cdot y2}{2}-\\frac{x^{3} \\cdot y0}{6}-\\frac{11 \\cdot x \\cdot y0}{6}-\\frac{3 \\cdot x \\cdot y2}{2}-\\frac{5 \\cdot x^{2} \\cdot y1}{2}+\\frac{x^{3} \\cdot y1}{2}+\\frac{x \\cdot y3}{3}+\\frac{x^{3} \\cdot y3}{6}+2 \\cdot x^{2} \\cdot y2+3 \\cdot x \\cdot y1+x^{2} \\cdot y0+y0 $\n       =   y0 * ( $-\\frac{x^{3}}{6}+x^{2}-\\frac{11 \\cdot x}{6}+1$ ) +\n           y1 * ( $\\frac{x^{3}}{2}-\\frac{5 \\cdot x^{2}}{2}+3 \\cdot x$ ) +\n           y2 * ( $-\\frac{x^{3}}{2}+2 \\cdot x^{2}-\\frac{3 \\cdot x}{2}$ ) +\n           y3 * ( $\\frac{x^{3}}{6}-\\frac{x^{2}}{2}+\\frac{x}{3}$ ) +\n              $0$\n       =   y0 * ( $-\\frac{\\left(x-1\\right) \\cdot \\left(x-2\\right) \\cdot \\left(x-3\\right)}{6}$ ) +\n           y1 * ( $\\frac{\\left(x-2\\right) \\cdot \\left(x-3\\right) \\cdot x}{2}$ ) +\n           y2 * ( $-\\frac{\\left(x-1\\right) \\cdot \\left(x-3\\right) \\cdot x}{2}$ ) +\n           y3 * ( $\\frac{\\left(x-1\\right) \\cdot \\left(x-2\\right) \\cdot x}{6}$ ) +\n              $0$\n"
                },
                {
                    "type": "html",
                    "tag": "hr"
                },
                {
                    "type": "text",
                    "text": "observations = [y0, y1, y2, y3, y4]\n"
                },
                {
                    "type": "html",
                    "tag": "br"
                },
                {
                    "type": "text",
                    "text": "$ f_{(4)}(x) $ = $ \\frac{\\left(-10 \\cdot x^{3} \\cdot y0-104 \\cdot x^{2} \\cdot y1-4 \\cdot x^{4} \\cdot y1-4 \\cdot x^{4} \\cdot y3-48 \\cdot x^{3} \\cdot y2-50 \\cdot x \\cdot y0-56 \\cdot x^{2} \\cdot y3-6 \\cdot x \\cdot y4-6 \\cdot x^{3} \\cdot y4-72 \\cdot x \\cdot y2+11 \\cdot x^{2} \\cdot y4+114 \\cdot x^{2} \\cdot y2+28 \\cdot x^{3} \\cdot y3+32 \\cdot x \\cdot y3+35 \\cdot x^{2} \\cdot y0+36 \\cdot x^{3} \\cdot y1+6 \\cdot x^{4} \\cdot y2+96 \\cdot x \\cdot y1+x^{4} \\cdot y0+x^{4} \\cdot y4+24 \\cdot y0\\right)}{24} $\n       =   y0 * ( $\\frac{x^{4}}{24}-\\frac{5 \\cdot x^{3}}{12}+\\frac{35 \\cdot x^{2}}{24}-\\frac{25 \\cdot x}{12}+1$ ) +\n           y1 * ( $-\\frac{x^{4}}{6}+\\frac{3 \\cdot x^{3}}{2}-\\frac{13 \\cdot x^{2}}{3}+4 \\cdot x$ ) +\n           y2 * ( $\\frac{x^{4}}{4}-2 \\cdot x^{3}+\\frac{19 \\cdot x^{2}}{4}-3 \\cdot x$ ) +\n           y3 * ( $-\\frac{x^{4}}{6}+\\frac{7 \\cdot x^{3}}{6}-\\frac{7 \\cdot x^{2}}{3}+\\frac{4 \\cdot x}{3}$ ) +\n           y4 * ( $\\frac{x^{4}}{24}-\\frac{x^{3}}{4}+\\frac{11 \\cdot x^{2}}{24}-\\frac{x}{4}$ ) +\n              $0$\n       =   y0 * ( $\\frac{\\left(x-1\\right) \\cdot \\left(x-2\\right) \\cdot \\left(x-3\\right) \\cdot \\left(x-4\\right)}{24}$ ) +\n           y1 * ( $-\\frac{\\left(x-2\\right) \\cdot \\left(x-3\\right) \\cdot \\left(x-4\\right) \\cdot x}{6}$ ) +\n           y2 * ( $\\frac{\\left(x-1\\right) \\cdot \\left(x-3\\right) \\cdot \\left(x-4\\right) \\cdot x}{4}$ ) +\n           y3 * ( $-\\frac{\\left(x-1\\right) \\cdot \\left(x-2\\right) \\cdot \\left(x-4\\right) \\cdot x}{6}$ ) +\n           y4 * ( $\\frac{\\left(x-1\\right) \\cdot \\left(x-2\\right) \\cdot \\left(x-3\\right) \\cdot x}{24}$ ) +\n              $0$\n"
                },
                {
                    "type": "html",
                    "tag": "hr"
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        },
        {
            "id": "id-c76940cc-486c-4c82-80f2-4090d6631fa4",
            "input": "### Surprise!\n\nIt appears that:\n$$\n\\begin{align}\nf_{(i)}(x) &= \\sum_{k=0}^i \\frac{f(k)}{i!} \\prod_{l=0 \\\\ l \\ne k}^i (-1)^{i-l} \\small{l \\choose i} (x - l)\n\\end{align}\n$$\n(Note that this can be easily shown to be equivalent to Lagrange Interpolation with the $x_i$ observation points spaced evenly 1 unit apart.)\n$ $\nWe need to show that the above equation can be derived from the definition:\n$$\n\\begin{align}\nf_{(i)}(x) &= \\sum_{k=0}^i \\Bigg( \\sum_{l=0}^{k}{(-1)^{k-l}{k \\choose l}f(l)} \\Bigg) {x \\choose k} \\\\\n\\end{align}\n$$\n",
            "output": [
                {
                    "type": "text",
                    "text": "### Surprise!\n\nIt appears that:\n$$\n\\begin{align}\nf_{(i)}(x) &= \\sum_{k=0}^i \\frac{f(k)}{i!} \\prod_{l=0 \\\\ l \\ne k}^i (-1)^{i-l} \\small{l \\choose i} (x - l)\n\\end{align}\n$$\n(Note that this can be easily shown to be equivalent to Lagrange Interpolation with the $x_i$ observation points spaced evenly 1 unit apart.)\n$ $\nWe need to show that the above equation can be derived from the definition:\n$$\n\\begin{align}\nf_{(i)}(x) &= \\sum_{k=0}^i \\Bigg( \\sum_{l=0}^{k}{(-1)^{k-l}{k \\choose l}f(l)} \\Bigg) {x \\choose k} \\\\\n\\end{align}\n$$\n"
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        },
        {
            "id": "id-25068dbe-9e78-4035-bd24-10fa9b42588e",
            "input": "---\n### Example for n=4, i=3, $f_{(3)}(x)$\n$$\n\\begin{array}{ccccccc}\nf(0) &        & f(1)    &        & f(2)       &            & f(3) \\\\\n     & \\D^1_0 &         & \\D^1_1 &            & \\D^1_2     &      \\\\\n     &        & \\D^2_0  &        & \\D^2_1     &            &      \\\\\n     &        &         & \\D^3_0 &            &            &      \\\\\n\\end{array}\n$$\nWe need to collect the coefficients of each $f(l)$.  Call these $C_f(l)$.\n$ $\nWe will start with $l=3$ which has only one subexpression when $k=3$.\n$$\n\\begin{align}\nC_f(3) &= (-1)^{3-3}{3 \\choose 3}{x \\choose 3} \\\\\n       &= \\frac{x^{\\underline{3}}}{3!} \\\\\n       &= \\frac{(x)(x-1)(x-2)}{6} \\\\\n       &\\textit{(correct)} \\\\\n\\end{align}\n$$",
            "output": [
                {
                    "type": "text",
                    "text": "---\n### Example for n=4, i=3, $f_{(3)}(x)$\n$$\n\\begin{array}{ccccccc}\nf(0) &        & f(1)    &        & f(2)       &            & f(3) \\\\\n     & \\D^1_0 &         & \\D^1_1 &            & \\D^1_2     &      \\\\\n     &        & \\D^2_0  &        & \\D^2_1     &            &      \\\\\n     &        &         & \\D^3_0 &            &            &      \\\\\n\\end{array}\n$$\nWe need to collect the coefficients of each $f(l)$.  Call these $C_f(l)$.\n$ $\nWe will start with $l=3$ which has only one subexpression when $k=3$.\n$$\n\\begin{align}\nC_f(3) &= (-1)^{3-3}{3 \\choose 3}{x \\choose 3} \\\\\n       &= \\frac{x^{\\underline{3}}}{3!} \\\\\n       &= \\frac{(x)(x-1)(x-2)}{6} \\\\\n       &\\textit{(correct)} \\\\\n\\end{align}\n$$"
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        },
        {
            "id": "id-a24c898d-19b6-4f53-8f83-1afebf88bf6c",
            "input": "Next, for $l=2$ there are two subexpressions with $k \\in \\{2, 3\\}$.\n$$\n\\begin{align}\nC_f(2) &= (-1)^{2-2}{2 \\choose 2}{x \\choose 2} + (-1)^{3-2}{3 \\choose 2}{x \\choose 3} \\\\\n       &= \\frac{x^{\\underline{2}}}{2!} + \\frac{-3 x^{\\underline{3}}}{3!} \\\\\n       &= \\frac{(x)(x-1) \\cdot 3}{6}   + \\frac{-3(x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{(x)(x-1) \\cdot 3}{6}   + \\frac{-3(x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{(x)(x-1)[ 3  + -3(x-2)]}{6} \\\\\n       &= \\frac{(x)(x-1)[ -3x + 9]}{6} \\\\\n       &= \\frac{-3(x)(x-1)(x-3)}{6} \\\\\n       &\\textit{(correct)} \\\\\n\\end{align}\n$$",
            "output": [
                {
                    "type": "text",
                    "text": "Next, for $l=2$ there are two subexpressions with $k \\in \\{2, 3\\}$.\n$$\n\\begin{align}\nC_f(2) &= (-1)^{2-2}{2 \\choose 2}{x \\choose 2} + (-1)^{3-2}{3 \\choose 2}{x \\choose 3} \\\\\n       &= \\frac{x^{\\underline{2}}}{2!} + \\frac{-3 x^{\\underline{3}}}{3!} \\\\\n       &= \\frac{(x)(x-1) \\cdot 3}{6}   + \\frac{-3(x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{(x)(x-1) \\cdot 3}{6}   + \\frac{-3(x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{(x)(x-1)[ 3  + -3(x-2)]}{6} \\\\\n       &= \\frac{(x)(x-1)[ -3x + 9]}{6} \\\\\n       &= \\frac{-3(x)(x-1)(x-3)}{6} \\\\\n       &\\textit{(correct)} \\\\\n\\end{align}\n$$"
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        },
        {
            "id": "id-8c7ff576-c74f-4685-9e08-5931d1f01a75",
            "input": "Next, for $l=1$ there are three subexpressions with $k \\in \\{1, 2, 3\\}$.\n$$\n\\begin{align}\nC_f(1) &= (-1)^{1-1}{1 \\choose 1}{x \\choose 1} + (-1)^{2-1}{2 \\choose 1}{x \\choose 2} + (-1)^{3-1}{3 \\choose 1}{x \\choose 3} \\\\\n       &= \\frac{x^{\\underline{1}}}{1!} + \\frac{-2 x^{\\underline{2}}}{2!} + \\frac{3 x^{\\underline{3}}}{3!} \\\\\n       &= \\frac{(x) \\cdot 2}{2} + \\frac{-2 (x)(x-1)}{2} + \\frac{3 (x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{(x) \\cdot [2 + -2 (x-1)]}{2} + \\frac{3 (x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{(x) \\cdot [-2 (x-2)]}{2} + \\frac{3 (x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{-2(x)(x-2)}{2} + \\frac{3 (x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{-2(x)(x-2) \\cdot 3}{6} + \\frac{3 (x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{3(x)(x-2)[ -2 + (x-1)]}{6} \\\\\n       &= \\frac{3(x)(x-2)(x-3)}{6} \\\\\n       &\\textit{(correct)} \\\\\n\\end{align}\n$$",
            "output": [
                {
                    "type": "text",
                    "text": "Next, for $l=1$ there are three subexpressions with $k \\in \\{1, 2, 3\\}$.\n$$\n\\begin{align}\nC_f(1) &= (-1)^{1-1}{1 \\choose 1}{x \\choose 1} + (-1)^{2-1}{2 \\choose 1}{x \\choose 2} + (-1)^{3-1}{3 \\choose 1}{x \\choose 3} \\\\\n       &= \\frac{x^{\\underline{1}}}{1!} + \\frac{-2 x^{\\underline{2}}}{2!} + \\frac{3 x^{\\underline{3}}}{3!} \\\\\n       &= \\frac{(x) \\cdot 2}{2} + \\frac{-2 (x)(x-1)}{2} + \\frac{3 (x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{(x) \\cdot [2 + -2 (x-1)]}{2} + \\frac{3 (x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{(x) \\cdot [-2 (x-2)]}{2} + \\frac{3 (x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{-2(x)(x-2)}{2} + \\frac{3 (x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{-2(x)(x-2) \\cdot 3}{6} + \\frac{3 (x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{3(x)(x-2)[ -2 + (x-1)]}{6} \\\\\n       &= \\frac{3(x)(x-2)(x-3)}{6} \\\\\n       &\\textit{(correct)} \\\\\n\\end{align}\n$$"
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        },
        {
            "id": "id-44c32d51-7c7f-454d-9628-79d6fed2e071",
            "input": "Finally, for $l=0$ there are four subexpressions with $k \\in \\{0, 1, 2, 3\\}$.\n$$\n\\begin{align}\nC_f(0) &= (-1)^{0-0}{0 \\choose 0}{x \\choose 0} + (-1)^{1-0}{1 \\choose 0}{x \\choose 1} + (-1)^{2-0}{2 \\choose 0}{x \\choose 2} + (-1)^{3-0}{3 \\choose 0}{x \\choose 3} \\\\\n       &= \\frac{x^{\\underline{0}}}{0!} + \\frac{-1 x^{\\underline{1}}}{1!} + \\frac{x^{\\underline{2}}}{2!} + \\frac{-1 x^{\\underline{3}}}{3!} \\\\\n       &= \\frac{1}{1} + \\frac{-1 (x)}{1} + \\frac{(x)(x-1)}{2} + \\frac{-1 (x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{(x-1) \\cdot -2}{2} + \\frac{(x)(x-1)}{2} + \\frac{-1 (x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{(x-1)(x-2) \\cdot 3}{6} + \\frac{-1 (x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{-1 (x-1)(x-2)(x-3)}{6} \\\\\n       &\\textit{(correct)} \\\\\n\\end{align}\n$$",
            "output": [
                {
                    "type": "text",
                    "text": "Finally, for $l=0$ there are four subexpressions with $k \\in \\{0, 1, 2, 3\\}$.\n$$\n\\begin{align}\nC_f(0) &= (-1)^{0-0}{0 \\choose 0}{x \\choose 0} + (-1)^{1-0}{1 \\choose 0}{x \\choose 1} + (-1)^{2-0}{2 \\choose 0}{x \\choose 2} + (-1)^{3-0}{3 \\choose 0}{x \\choose 3} \\\\\n       &= \\frac{x^{\\underline{0}}}{0!} + \\frac{-1 x^{\\underline{1}}}{1!} + \\frac{x^{\\underline{2}}}{2!} + \\frac{-1 x^{\\underline{3}}}{3!} \\\\\n       &= \\frac{1}{1} + \\frac{-1 (x)}{1} + \\frac{(x)(x-1)}{2} + \\frac{-1 (x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{(x-1) \\cdot -2}{2} + \\frac{(x)(x-1)}{2} + \\frac{-1 (x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{(x-1)(x-2) \\cdot 3}{6} + \\frac{-1 (x)(x-1)(x-2)}{6} \\\\\n       &= \\frac{-1 (x-1)(x-2)(x-3)}{6} \\\\\n       &\\textit{(correct)} \\\\\n\\end{align}\n$$"
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        },
        {
            "id": "id-74e69a8b-7cc2-4dbb-84f7-11d62ce63133",
            "input": "The preceding example indicates how to prove the general result.\n$ $\nEach $C_f(l)$ has $n-l$ subexpressions, and the lowest order of these with $k=l$,\nwhen combined with the next higher, converts the $(x-l)$ in the expansion of $x^{\\underline{l}}$\nin the term.  This continues up to the highest $k=n-1$ term.  During this, the\nbinomial coefficients from the direct calculation of each $\\D^i_0$ interact with\nthe factorials along the $C_f(\\cdot)$ chain to provide exactly the right cancellations\nto make everything balance out.",
            "output": [
                {
                    "type": "text",
                    "text": "The preceding example indicates how to prove the general result.\n$ $\nEach $C_f(l)$ has $n-l$ subexpressions, and the lowest order of these with $k=l$,\nwhen combined with the next higher, converts the $(x-l)$ in the expansion of $x^{\\underline{l}}$\nin the term.  This continues up to the highest $k=n-1$ term.  During this, the\nbinomial coefficients from the direct calculation of each $\\D^i_0$ interact with\nthe factorials along the $C_f(\\cdot)$ chain to provide exactly the right cancellations\nto make everything balance out."
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        },
        {
            "id": "id-83cefd2c-e34e-4772-9dd0-1cce4a0d1b99",
            "input": "",
            "output": [],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        }
    ]
}